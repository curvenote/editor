import { MathView, EquationView, renderMath } from './MathView';
import { ImageView } from './ImageView';
import { IFrameView } from './IFrameView';
import { LinkView } from './LinkView';
import { TimeView } from './TimeView';
import { MentionView } from './Mention';
import { CodeBlockView } from './CodeBlockView';
import { FootnoteView } from './FootnoteView';
import createNodeView from './NodeView';
import WidgetView from './WidgetView';
import { clickSelectFigure } from './utils';
export type { NodeViewProps, GetPos } from './types';
declare const _default: {
    createNodeView: typeof createNodeView;
    MathView: typeof MathView;
    EquationView: typeof EquationView;
    MentionView: typeof MentionView;
    renderMath: typeof renderMath;
    clickSelectFigure: typeof clickSelectFigure;
    ImageView: typeof ImageView;
    IFrameView: typeof IFrameView;
    LinkView: typeof LinkView;
    TimeView: typeof TimeView;
    WidgetView: typeof WidgetView;
    newWidgetView: (node: import("prosemirror-model").Node<any>, view: import("prosemirror-view").EditorView<any>, getPos: boolean | import("./types").GetPos) => WidgetView;
    CodeBlockView: typeof CodeBlockView;
    FootnoteView: typeof FootnoteView;
};
export default _default;
